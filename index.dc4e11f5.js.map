{"mappings":"AAAA,MAAMA,EAAcC,SAASC,cAAc,iBACrCC,EAASF,SAASC,cAAc,WAChCE,EAAUH,SAASC,cAAc,aACjCG,EAAQJ,SAASC,cAAc,UAiBjC,SAAKI,EAAYC,GACnBF,EAAMG,YAAcD,EACpBF,EAAMI,UAAUC,IAAI,O,CAyDrBV,EAAWW,iBAAiB,UAAU,KACrC,MAAMC,EAAkBZ,EAAYa,MAlCtC,IAAyBC,EAqCtBV,EAAOW,MAAMC,QAAU,OACxBb,EAAOY,MAAMC,QAAU,SAtCAF,EAyCPF,EAxCTK,MACL,wDAAwDH,IACxD,CACEI,QAAS,CACP,YA5CN,2EAgDGC,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,oCAElB,OAAOF,EAASG,MAAM,IAEvBJ,MAAKK,IACJ,MAAMC,EAAUD,EAAK,GACfE,EAAQD,EAAQE,OAAO,GAO7B,MANY,CACVC,IAAKH,EAAQG,IACbC,KAAMH,EAAMG,KACZC,YAAaJ,EAAMI,YACnBC,YAAaL,EAAMK,YAEX,IAEXC,OAAMC,IACL3B,EAAY2B,EAAMC,SAClBC,QAAQC,MAAMH,EAAM,KAaSd,MAAKkB,KA7EvC,SAAuBA,GACtBjC,EAAQkC,UAAY,mBACND,EAAIT,kCACVS,EAAIR,mDACyBQ,EAAIP,yDACJO,EAAIN,qB,CA0EtCQ,CAAcF,GAGflC,EAAOY,MAAMC,QAAU,OAGtBZ,EAAOW,MAAMC,QAAU,OAAO,GAC/B,IAIJb,EAAOY,MAAMC,QAAU,QAzEdC,MAAM,sCAAuC,CAClDC,QAAS,CACP,YAtBJ,2EAyBGC,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,MAAM,IAEvBJ,MAAKQ,GAAUA,EAAOa,KAAId,IAAU,CAAEe,GAAIf,EAAMe,GAAIZ,KAAMH,EAAMG,WAChEG,OAAMU,IACLpC,EAAYoC,EAAMR,SAClBC,QAAQC,MAAMM,EAAM,IA8DZvB,MAAKQ,IACjBA,EAAOgB,SAAQjB,IACb,MAAMkB,EAAS3C,SAAS4C,cAAc,UACtCD,EAAO/B,MAAQa,EAAMe,GACrBG,EAAOpC,YAAckB,EAAMG,KAC3B7B,EAAY8C,YAAYF,EAAO,IAIjC5C,EAAYe,MAAMC,QAAU,QAG5Bb,EAAOY,MAAMC,QAAU,MAAM","sources":["src/index.js"],"sourcesContent":["const breedSelect = document.querySelector('.breed-select');\nconst loader = document.querySelector('.loader');\nconst catInfo = document.querySelector('.cat-info');\nconst error = document.querySelector('.error');\n\n// Unikalny klucz API\nconst apiKey =\n  'live_TziuycWEj2WE6BOPwhJ5cY6bz2X8qb25n1lv2G2sCFnxVGgRFM0OalXl4tG4StRH';\n\n// Funkcja do wyświetlania informacji o kocie\nfunction displayCatInfo(cat) {\n  catInfo.innerHTML = `\n    <img src=\"${cat.url}\" alt=\"Cat Image\">\n    <h2>${cat.name}</h2>\n    <p><strong>Description:</strong> ${cat.description}</p>\n    <p><strong>Temperament:</strong> ${cat.temperament}</p>\n  `;\n}\n\n// Funkcja obsługująca błąd\nfunction handleError(errorMsg) {\n  error.textContent = errorMsg;\n  error.classList.add('show');\n}\n\n// Funkcja do pobierania listy ras\nfunction fetchBreeds() {\n  return fetch('https://api.thecatapi.com/v1/breeds', {\n    headers: {\n      'x-api-key': apiKey,\n    },\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch breed list.');\n      }\n      return response.json();\n    })\n    .then(breeds => breeds.map(breed => ({ id: breed.id, name: breed.name })))\n    .catch(error => {\n      handleError(error.message);\n      console.error(error);\n    });\n}\n\n// Funkcja do pobierania informacji o kocie na podstawie rasy\nfunction fetchCatByBreed(breedId) {\n  return fetch(\n    `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}`,\n    {\n      headers: {\n        'x-api-key': apiKey,\n      },\n    }\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch cat information.');\n      }\n      return response.json();\n    })\n    .then(data => {\n      const catData = data[0];\n      const breed = catData.breeds[0];\n      const cat = {\n        url: catData.url,\n        name: breed.name,\n        description: breed.description,\n        temperament: breed.temperament,\n      };\n      return cat;\n    })\n    .catch(error => {\n      handleError(error.message);\n      console.error(error);\n    });\n}\n\n// Obsługa zdarzenia wyboru opcji w select.breed-select\nbreedSelect.addEventListener('change', () => {\n  const selectedBreedId = breedSelect.value;\n\n  // Ukrycie div.cat-info i wyświetlenie p.loader\n  catInfo.style.display = 'none';\n  loader.style.display = 'block';\n\n  // Wysłanie żądania HTTP, aby pobrać informacje o kocie\n  fetchCatByBreed(selectedBreedId).then(cat => {\n    // Wyświetlenie informacji o kocie\n    displayCatInfo(cat);\n\n    // Ukrycie p.loader\n    loader.style.display = 'none';\n\n    // Wyświetlenie div.cat-info\n    catInfo.style.display = 'block';\n  });\n});\n\n// Inicjalizacja strony\nloader.style.display = 'block';\n\n// Wysłanie żądania HTTP, aby pobrać listę ras\nfetchBreeds().then(breeds => {\n  breeds.forEach(breed => {\n    const option = document.createElement('option');\n    option.value = breed.id;\n    option.textContent = breed.name;\n    breedSelect.appendChild(option);\n  });\n\n  // Wyświetlenie select.breed-select\n  breedSelect.style.display = 'block';\n\n  // Ukrycie p.loader\n  loader.style.display = 'none';\n});\n"],"names":["$1f0dc3b9307be026$var$breedSelect","document","querySelector","$1f0dc3b9307be026$var$loader","$1f0dc3b9307be026$var$catInfo","$1f0dc3b9307be026$var$error","$1f0dc3b9307be026$var$handleError","errorMsg","textContent","classList","add","addEventListener","selectedBreedId","value","breedId","style","display","fetch","headers","then","response","ok","Error","json","data","catData","breed","breeds","url","name","description","temperament","catch","error2","message","console","error","cat","innerHTML","$1f0dc3b9307be026$var$displayCatInfo","map","id","error1","forEach","option","createElement","appendChild"],"version":3,"file":"index.dc4e11f5.js.map"}